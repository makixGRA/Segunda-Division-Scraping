add_time <- ms(add_time)
time_elapsed <- time - as.duration(add_time)
library(dplyr)
q1 <- mutate(first_q,
CODETEAM = trimws(CODETEAM),
PLAYER_ID = trimws(PLAYER_ID)
)
str(q1)
library(rvest)
URL <- "http://www.euroleague.net/main/results/showgame?gamecode=152&seasoncode=E2017#!boxscore"
boxscore <- read_html(URL)
starting_fives <- boxscore %>%
html_nodes(".PlayerStartFive") %>%
html_text()
starting_fives
starting_home <- pbp_df %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamA)
starting_home <- pbp_df %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamA)
starting_fives
starting_home <- pbp_df %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamA)
pbp_df
pbp_df %>%
count(PLAYTYPE)
pbp_df %>%
count(PLAYTYPE,sort=TRUE)
pbp_df
starting_home <- pbp_df %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamA)
starting_away <- first_q %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamB)
starting_away
subs_home <- pbp_df %>%
filter(PLAYTYPE=="IN" & CODETEAM==json_content$CodeTeamA)
score_df <- filter(pbp_df, !is.na(POINTS_A) | !is.na(POINTS_B))
install.packages("WDI")
WDI
??WDI
library(WDI)
WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2000)
WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2000) %>% View()
View(WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2000))
View(WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2018))
detach("package:WDI", unload=TRUE)
demo <- tribble(
~a,
~b,
"bar_1", 20,
"bar_2", 30,
"bar_3", 40
)
library(tidyverse)
demo <- tribble(
~a,
~b,
"bar_1", 20,
"bar_2", 30,
"bar_3", 40
)
ggplot(data = demo) +
geom_bar(
mapping = aes(x = a, y = b), stat = "identity")
ggplot(data = demo) +
geom_bar(mapping = aes(x = a, y = b), stat = "identity")
library(rvest)
suma(c(3,2,7,8,9,2,6),14)
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
v = x
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
v[i] = x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,v,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),14)
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
v = x
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
v[i] = x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,x,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
v = x
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,x,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,x,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,x,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),80)
comprueba<-function(x){
r<-" "
natural<-TRUE
divisores<-vector(length=0)
if(is.numeric(x)){
if(x<0){
natural=FALSE
}
else{
divisores=c()
for(i in c(1:x)){
if(x%%i==0){
divisores=c(divisores,i)
}
}
}
}
if(natural==FALSE)
r<-"Error"
else
r<-"Numero natural"
return(list(x,divisores,r))
}
comprueba(10)
comprueba<-function(x){
r<-" "
natural<-TRUE
divisores<-vector(length=0)
if(is.numeric(x)){
if(x<0){
natural=FALSE
}
else{
divisores=c()
for(i in c(1:x)){
if(x%i==0){
divisores=c(divisores,i)
}
}
}
}
if(natural==FALSE)
r<-"Error"
else
r<-"Numero natural"
return(list(x,divisores,r))
}
comprueba<-function(x){
r<-" "
natural<-TRUE
divisores<-vector(length=0)
if(is.numeric(x)){
if(x<0){
natural=FALSE
}
else{
divisores=c()
for(i in c(1:x)){
if(x%%i==0){
divisores=c(divisores,i)
}
}
}
}
if(natural==FALSE)
r<-"Error"
else
r<-"Numero natural"
return(list(x,divisores,r))
}
comprueba(10)
comprueba(15)
f <- function(){
a <- scan("", nlines = 5)
return(a)
}
f()
f <- function(){
a <- scan("", nlines = 5)
b <- vector(length=0)
for (i in a){
if(a[i] > 100)
return("Hay algún elemento mayor o igual que 100")
else if(a[i] < 10)
b <-  append(b,a[i])
return(sum(b))
}
}
f()
f <- function(){
a <- scan("", nlines = 5)
b <- vector(length=5)
for (i in a){
if(a[i] > 100)
return("Hay algún elemento mayor o igual que 100")
else if(a[i] < 10)
b <-  append(b,a[i])
return(sum(b))
}
}
f()
f <- function(){
a <- scan("", nlines = 5)
b <- vector(length=5)
for (i in a){
if(i > 100)
return("Hay algún elemento mayor o igual que 100")
else if(i < 10)
b <-  append(b,i)
return(sum(b))
}
}
f()
f <- function(){
a <- scan("", nlines = 5)
b <- vector(length=5)
for (i in a){
if(i > 100)
return("Hay algún elemento mayor o igual que 100")
else if(i < 10)
b <- append(b,i)
}
return(sum(b))
}
f()
f()
f <- function(){
a <- scan("", nlines = 5)
b <- vector(length=5)
for (i in a){
if(i >= 100)
return("Hay algún elemento mayor o igual que 100")
else if(i < 10)
b <- append(b,i)
}
return(sum(b))
}
f()
f()
f()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
paste("La suma de los pares es",sum(a))
paste("La suma de los impares es",sum(b))
}
par_impar()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
sum(a)
paste("La suma de los pares es",sum(a))
paste("La suma de los impares es",sum(b))
}
par_impar()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
paste("La suma de los pares es",sum(a))
sum(a)
}
par_impar()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
paste("La suma de los pares es",sum(a))
paste("La suma de los impares es",sum(b))
}
par_impar()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
paste("La suma de los pares es",sum(a),"\nLa suma de los impares es",sum(b))
}
par_impar()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
paste("La suma de los pares es",sum(a),"\n La suma de los impares es",sum(b))
}
par_impar()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
paste("La suma de los pares es",sum(a), La suma de los impares es",sum(b),sep="\n)
}
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
paste("La suma de los pares es",sum(a), La suma de los impares es",sum(b),sep="\n")
}
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
paste("La suma de los pares es",sum(a), "La suma de los impares es",sum(b),sep="\n")
}
par_impar()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
cat("La suma de los pares es",sum(a))
cat("La suma de los impares es",sum(b))
}
par_impar()
par_impar <- function(){
a <- vector(length=100)
b <- vector(length=100)
for(i in 1:200){
if(i %% 2 == 0)
a <- append(a,i)
else
b <- append(b,i)
}
cat("La suma de los pares es",sum(a),end="\n")
cat("La suma de los impares es",sum(b))
}
par_impar()
second_division %>% View()
rm(list = ls())
library(rvest)
library(tidyverse)
library(tibble)
second_division <- read.table("DatosSegundaDivision.txt",stringsAsFactors = FALSE)
setwd("~/Documentos/GRADOESTADISTICA/DatasetsR/Segunda-Division-Scraping")
second_division <- read.table("DatosSegundaDivision.txt",stringsAsFactors = FALSE)
second_division$Nacimiento <- as.Date(second_division$Nacimiento)
second_division$Posiciones = ordered(second_division$Posiciones, levels = c("Portero","Defensa central","Lateral izquierdo","Lateral derecho","Pivote","Medio centro","Medio centro ofensivo","Interior derecho","Interior izquierdo","Extremo izquierdo","Extremo derecho","Media punta","Delantero centro"))
str(second_division)
ind <- which(str_detect(second_division$Jugadores,"James Davis"))
second_division <- second_division[-ind,]
ind <- which(str_detect(second_division$Jugadores,"Cadamuro"))
second_division <- second_division[-ind,]
ind <- which(str_detect(second_division$Jugadores,"Errasti"))
second_division <- second_division[-ind,]
second_division <- add_row(second_division,Jugadores = "Robert Ibáñez",Posiciones="Extremo derecho",Valores_Mercado=1000000,Nacimiento="1993-03-22",Equipos = "CA Osasuna")
second_division <- add_row(second_division,Jugadores = "Erik Morán",Posiciones="Pivote",Valores_Mercado=750000,Nacimiento="1991-05-25",Equipos = "Málaga CF")
second_division %>% View()
ind <- which(str_detect(second_division$Jugadores,"Carlos Castro"))
second_division <- second_division[-ind,]
second_division <- add_row(second_division,Jugadores = "Carlos Castro",Posiciones="Delantero centro",Valores_Mercado=1300000,Nacimiento="1995-06-01",Equipos = "Elche CF")
second_division %>% View()
second_division <- add_row(second_division,Jugadores = "Yann Bodiger",Posiciones="Pivote",Valores_Mercado=3000000,Nacimiento="1995-02-09",Equipos = "Córdoba CF")
second_division <- add_row(second_division,Jugadores = "Slavoljub Srnic",Posiciones="Extremo derecho",Valores_Mercado=1750000,Nacimiento="1992-01-12",Equipos = "UD Las Palmas")
second_division %>% View()
ind <- which(str_detect(second_division$Jugadores,"Andrés Prieto"))
second_division <- second_division[-ind,]
second_division <- second_division %>% arrange(second_division$Equipos,second_division$Posiciones)
write.table(second_division,"DatosSegundaDivision.txt")
second_division %>% View()
ind <- which(str_detect(second_division$Jugadores,"Planas"))
second_division <- second_division[-ind,]
second_division <- add_row(second_division,Jugadores = "Alfred Planas",Posiciones="Extremo derecho",Valores_Mercado=500000,Nacimiento="1996-02-15",Equipos = "Elche CF")
second_division <- second_division %>% arrange(second_division$Equipos,second_division$Posiciones)
write.table(second_division,"DatosSegundaDivision.txt")
second_division %>% View()
