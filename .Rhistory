v[i] = x[i]
}
return(total)
}
suma(c(1,2,3,4,5,6,7,8,9,10),10)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
while(total <= m){
total = total + x[i]
i = i+1
v[i] = x[i]
}
print(total)
return(v)
}
suma(c(1,2,3,4,5,6,7,8,9,10),10)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
while(total <= m){
total = total + x[i]
v[i] = x[i]
i = i+1
}
print(total)
return(v)
}
suma(c(1,2,3,4,5,6,7,8,9,10),10)
suma(c(1,2,3,4,5,6,7,8,9,10),9)
suma(c(3,2,7,8,9,2,6),17)
suma(c(3,2,7,8,9,2,6),29)
iris
library(dplyr)
library(tibble)
iris_tib <- as.tibble(iris)
iris_tib
iris_tib %>%
group_by(Species)
iris_tib %>%
group_by(Species) %>%
filter(Sepal.Length > 56)
iris_tib %>%
select(Sepal.Length)
iris_tib %>%
select(Sepal.Length) %>% View()
iris_tib %>%
group_by(Species) %>%
summarize(Sepal.Length)
iris_tib %>%
group_by(Species) %>%
summarize(mean(Sepal.Length))
iris_tib %>%
group_by(Species) %>%
summarize(sum(Sepal.Length))
iris_tib %>%
group_by(Species) %>%
count(Sepal.Length)
iris_tib %>%
group_by(Species) %>%
summarise(count=n())
iris_tib %>%
group_by(Species) %>%
summarise(count=Sepal.Length > 5.6)
iris_tib %>%
group_by(Species) %>%
summarise(mean(Sepal.Length))
iris_tib %>%
filter(Sepal.Length > 5.6)
iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species)
iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
summarise()
iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
summarise(count())
iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
summarise(count(Sepal.Length))
iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
count(Sepal.Length)
iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
summarise(n())
num_plant_5.6 <- iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
summarise(n())
long_media <- iris_tib %>%
filter(Sepal.Width > 1.5 && Sepal.Width < 6.2)
long_media
long_media <- iris_tib %>%
filter(Petal.Width > 1.5 && Petal.Width < 6.2)
iris_tib %>% select(Petal.Width) %>% View()
long_media <- iris_tib %>%
filter(Petal.Width > 1.5 & Petal.Width < 6.2)
long_media
long_media <- iris_tib %>%
filter(Petal.Width > 1.5 & Petal.Width < 6.2) %>%
mutate(media_sepalo = mean(Sepal.Length))
long_media
long_media <- iris_tib %>%
filter(Petal.Width > 1.5 & Petal.Width < 6.2) %>%
mean(Sepal.Length)
long_media <- iris_tib %>%
filter(Petal.Width > 1.5 & Petal.Width < 6.2) %>%
mean(iris_tib$Sepal.Length)
mean(long_media$Sepal.Length)
appy(long_media,2,mean)
apply(long_media,2,mean)
long_media <- iris_tib %>%
filter(Petal.Width > 1.5 & Petal.Width < 6.2)
long_media
mean(long_media[["Sepal.Length"]])
virginica <- iris_tib %>%
filter(Species == "virginica")
virginica
virginica <- iris_tib %>%
filter(Species == "virginica") %>%
hist(Petal.Length)
?hist
hist(virginica$Petal.Length)
hist(virginica$Petal.Length,xlabel="Longitud de los pétalos",
ylabel="Frecuencia",col=rainbow())
hist(virginica$Petal.Length,xlabel="Longitud de los pétalos",
ylabel="Frecuencia",col=red)
hist(virginica$Petal.Length,xlabel="Longitud de los pétalos",
ylabel="Frecuencia")
hist(virginica$Petal.Length,xlabel="Longitud de los pétalos",
ylabel="Frecuencia",col="red")
hist(virginica$Petal.Length,xlabel="Longitud de los pétalos",
ylabel="Frecuencia",col="blue")
warnings()
hist(virginica$Petal.Length,col="blue")
hist(virginica$Petal.Length,col="blue",main="Histograma")
hist(virginica$Petal.Length,col="blue",main="Histograma de la longitud de pétalos")
hist(virginica$Petal.Length,col="blue",main="Histograma de la longitud de pétalos",xlab="Longitud de pétalos")
hist(virginica$Petal.Length,col="blue",main="Histograma de la longitud de pétalos",xlab="Longitud de pétalos",ylab="Frecuencia")
```{r echo=FALSE}
num_plant <- iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
summarise(n())
num_plant
rm(num_plant_5.6)
mean(long_media$Sepal.Length)
num_plant <- iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
summarise(n())
num_plant
iris_tib %>%
filter(Sepal.Length > 5.6)
iris_tib %>%
filter(Sepal.Length > 5.6) %>% View()
iris_tib %>%
filter(Sepal.Length > 5.6) %>%
count
iris_tib %>% count
iris_tib %>% arrange(Sepal.Length)
iris_tib %>% arrange(Sepal.Length) %>% View()
iris_tib %>% arrange((desc(Sepal.Length)) %>% View()
iris_tib %>% arrange((desc(Sepal.Length)) %>% View()
iris_tib %>% arrange(desc(Sepal.Length)) %>% View()
iris_tib %>% arrange(desc(Sepal.Length)) %>% View()
num_plant <- iris_tib %>%
filter(Sepal.Length > 5.6) %>%
group_by(Species) %>%
summarise(n())
num_plant
long_media <- iris_tib %>%
filter(Petal.Width > 1.5 & Petal.Width < 6.2)
mean(long_media$Sepal.Length)
virginica <- iris_tib %>%
filter(Species == "virginica")
hist(virginica$Petal.Length,col="blue",
main="Histograma de la longitud de pétalos",
xlab="Longitud de pétalos",ylab="Frecuencia")
hist(virginica$Petal.Length,col="blue",
main="Histograma de la longitud de pétalos en virginicas",
xlab="Longitud de pétalos",ylab="Frecuencia")
summary(virginica)
summary(virginica$Petal.Length)
str(virginica)
summary(virginica$Petal.Length)
y = dnorm(virginica$Petal.Length, mean=5.552, sd=1)
plot(virginica$Petal.Length,y,type="l",col="red")
y = dnorm(virginica$Petal.Length, mean=5.552, sd=2)
plot(virginica$Petal.Length,y,type="l",col="red")
y = dnorm(virginica$Petal.Length, mean=5.552, sd=1)
y = dnorm(virginica$Petal.Length, mean=0, sd=1)
plot(virginica$Petal.Length,y,type="l",col="red")
y = dnorm(virginica$Petal.Length, mean=5.552, sd=1)
plot(virginica$Petal.Length,y,type="l",col="red")
plot(virginica$Petal.Length,y,col="red")
y = dnorm(virginica$Petal.Length, mean=5.552, sd=0.1)
plot(virginica$Petal.Length,y,col="red")
y = dnorm(virginica$Petal.Length, mean=5.552, sd=0.5)
plot(virginica$Petal.Length,y,col="red")
sd(virginica$Petal.Length)
y = dnorm(virginica$Petal.Length, mean=5.552, sd=0.5518947)
plot(virginica$Petal.Length,y,col="red")
y = dnorm(virginica$Petal.Length, mean=5.552, sd=0.5518947,type="l")
plot(virginica$Petal.Length,y,col="red",type="l")
plot(virginica$Petal.Length,y,col="red",type="b")
plot(virginica$Petal.Length,y,col="red",type="o")
plot(virginica$Petal.Length,y,col="red",type="o")
plot(virginica$Petal.Length,y,col="red",type="s")
plot(virginica$Petal.Length,y,col="red",type="l")
dnorm(virginica$Petal.Length,0,1)
dnorm(virginica$Petal.Length,5.552,0.5518947)
dnorm(virginica$Petal.Length,5.552,0.5518947)
dnorm(virginica$Petal.Length,5.552,0.5518947)
plot(dnorm(virginica$Petal.Length,5.552,0.5518947))
plot(virginica$Petal.Length,dnorm(virginica$Petal.Length,5.552,0.5518947))
plot(virginica$Petal.Length,dnorm(virginica$Petal.Length,5.552,0.5518947),type="l")
y = dnorm(virginica$Petal.Length, mean=5.552, sd=0.5518947)
plot(virginica$Petal.Length,y,col="red",type="l")
devtools::install_github("bradleyfay/spoRts")
devtools::install_github("bradleyfay/spoRts")
devtools::install_github("ccagrawal/sportsTools")
usethis::browse_github_pat()
devtools::install_github("ccagrawal/sportsTools")
usethis::edit_r_environ(67f1c787eea08258f2b6252146d4b957f0681f0e)
usethis::edit_r_environ(GITHUB_PAT=8e05c11994fbc1b09698eb45089d37f3bd6e0b30)
usethis::edit_r_environ()
usethis::edit_r_environ()
devtools::install_github("ccagrawal/sportsTools")
library(sportsTools)
?sportTools
help(sportTools)
??sportTools
library("sportsTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:sportsTools", unload=TRUE)
vignette()
vignette(sportTools)
vignette("sportTools"")
d
library(sportsTools)
sportsTools::GetTeamStats(2014)
sportsTools::GetTeamStats(2014,quarter=5)
sportsTools::GetGameIDsDay('2017-01-24')
devtools::install_github("ccagrawal/nbaTools")
install.packages("httr")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("magrittr")
install.packages("magrittr")
?ms
??ms
?ms
ms
ms()
??ms
library(httr)
library(jsonlite)
library(magrittr)
library(lubridate)
pbp <- GET("http://live.euroleague.net/api/PlayByPlay?gamecode=175&seasoncode=E2017&disp=") %>%
stop_for_status()
pbp2 <- GET("http://live.euroleague.net/api/PlayByPlay", query=list(gamecode=175, seasoncode="E2017"))
names(pbp)
text_content <- content(pbp, as="text", encoding="UTF-8")
json_content <- text_content %>% fromJSON
json_content$FirstQuarter
first_q <- json_content$FirstQuarter
str(first_q)
pbp_df <- with(json_content, rbind(FirstQuarter, SecondQuarter,
ThirdQuarter, ForthQuarter,
ExtraTime))
pbp_df
rows_per_q <- c(nrow(json_content$FirstQuarter),
nrow(json_content$SecondQuarter),
nrow(json_content$ThirdQuarter),
nrow(json_content$ForthQuarter),
ifelse(is.null(nrow(json_content$ExtraTime)), 0,
nrow(json_content$ExtraTime)))
if (is.null(nrow(json_content$ExtraTime))) {
quarters <- rep(1:4, rows_per_q[-5])
} else{
quarters <- rep(1:5, rows_per_q)
}
library(dplyr)
pbp_df$QUARTER <- quarters
pbp_df[which(pbp_df$PLAYTYPE=="BP"), "MARKERTIME"] <- "10:00"
pbp_df[which(pbp_df$PLAYTYPE=="EP"), "MARKERTIME"] <- "00:00"
pbp_df[which(pbp_df$PLAYTYPE=="EG"), "MARKERTIME"] <- "00:00"
pbp_df <- pbp_df %>%
mutate(TIME = ms(MARKERTIME))
time <- as.duration(pbp_df$TIME) - as.duration(ms("10:00"))
add_time <- rep(c("00:00", "10:00", "20:00", "30:00"), rows_per_q[-5])
add_time <- ms(add_time)
time_elapsed <- time - as.duration(add_time)
library(dplyr)
q1 <- mutate(first_q,
CODETEAM = trimws(CODETEAM),
PLAYER_ID = trimws(PLAYER_ID)
)
str(q1)
library(rvest)
URL <- "http://www.euroleague.net/main/results/showgame?gamecode=152&seasoncode=E2017#!boxscore"
boxscore <- read_html(URL)
starting_fives <- boxscore %>%
html_nodes(".PlayerStartFive") %>%
html_text()
starting_fives
starting_home <- pbp_df %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamA)
starting_home <- pbp_df %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamA)
starting_fives
starting_home <- pbp_df %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamA)
pbp_df
pbp_df %>%
count(PLAYTYPE)
pbp_df %>%
count(PLAYTYPE,sort=TRUE)
pbp_df
starting_home <- pbp_df %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamA)
starting_away <- first_q %>%
filter(PLAYTYPE=="OUT" & CODETEAM==json_content$CodeTeamB)
starting_away
subs_home <- pbp_df %>%
filter(PLAYTYPE=="IN" & CODETEAM==json_content$CodeTeamA)
score_df <- filter(pbp_df, !is.na(POINTS_A) | !is.na(POINTS_B))
install.packages("WDI")
WDI
??WDI
library(WDI)
WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2000)
WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2000) %>% View()
View(WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2000))
View(WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2018))
detach("package:WDI", unload=TRUE)
demo <- tribble(
~a,
~b,
"bar_1", 20,
"bar_2", 30,
"bar_3", 40
)
library(tidyverse)
demo <- tribble(
~a,
~b,
"bar_1", 20,
"bar_2", 30,
"bar_3", 40
)
ggplot(data = demo) +
geom_bar(
mapping = aes(x = a, y = b), stat = "identity")
ggplot(data = demo) +
geom_bar(mapping = aes(x = a, y = b), stat = "identity")
library(rvest)
suma(c(3,2,7,8,9,2,6),14)
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
v = x
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
v[i] = x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,v,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),14)
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
v = x
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
v[i] = x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,x,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
v = x
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,x,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
v <- vector(length = 0)
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,x,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),80)
suma <- function(x,m){
total <- 0
i <- 1
superado <- TRUE
r <- ""
if(m > sum(x)){
total = sum(x)
superado = FALSE
}
else{
while(total <= m){
total = total + x[i]
i = i+1
}
}
if(superado == TRUE)
r <- "Se ha superado el valor m."
else
r <- "No se ha superado el valor m."
l <- list(total,x,r)
return(l)
}
suma(c(3,2,7,8,9,2,6),80)
library(rvest)
library(tidyverse)
library(tibble)
setwd("~/Documentos/GRADOESTADISTICA/DatasetsR/Segunda-Division-Scraping")
second_division <- read.table("DatosSegundaDivision.txt",stringsAsFactors = FALSE)
second_division$Nacimiento <- as.Date(second_division$Nacimiento)
second_division$Posiciones = ordered(second_division$Posiciones, levels = c("Portero","Defensa central","Lateral izquierdo","Lateral derecho","Pivote","Medio centro","Medio centro ofensivo","Interior derecho","Interior izquierdo","Extremo izquierdo","Extremo derecho","Media punta","Delantero centro"))
str(second_division)
ind <- which(str_detect(second_division$Jugadores,"Galán"))
ind <- which(str_detect(second_division$Jugadores,"Javi Galán"))
second_division <- second_division[-ind,]
second_division <- second_division %>% arrange(second_division$Equipos,second_division$Posiciones)
write.table(second_division,"DatosSegundaDivision.txt")
second_division %>% View()
